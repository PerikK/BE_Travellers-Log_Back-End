// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  visits    Visit[]
  Location  Location[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Location {
  id          Int      @id @default(autoincrement())
  name        String
  address     String?
  latitude    Float?
  longitude   Float?
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById Int
  visits      Visit[]
  createdAt   DateTime @default(now())
}

model Visit {
  id         Int        @id @default(autoincrement())
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  location   Location   @relation(fields: [locationId], references: [id])
  locationId Int
  visitDate  DateTime   @default(now())
  logEntries LogEntry[]
  pictures   Picture[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model LogEntry {
  id        Int      @id @default(autoincrement())
  visit     Visit    @relation(fields: [visitId], references: [id])
  visitId   Int
  logText   String
  createdAt DateTime @default(now())
}

model Picture {
  id         Int      @id @default(autoincrement())
  visit      Visit    @relation(fields: [visitId], references: [id])
  visitId    Int
  pictureUrl String
  createdAt  DateTime @default(now())
}
